(window.webpackJsonp=window.webpackJsonp||[]).push([[85],{330:function(t,r,a){"use strict";a.r(r);var e=a(38),v=Object(e.a)({},function(){var t=this,r=t.$createElement,a=t._self._c||r;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"【概念向】rtp-与-rtcp-详解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#【概念向】rtp-与-rtcp-详解","aria-hidden":"true"}},[t._v("#")]),t._v(" 【概念向】RTP 与 RTCP 详解")]),t._v(" "),a("p"),a("div",{staticClass:"table-of-contents"},[a("ul",[a("li",[a("a",{attrs:{href:"#udp-还是-tcp"}},[t._v("UDP 还是 TCP")])]),a("li",[a("a",{attrs:{href:"#rtp-和-rtcp"}},[t._v("RTP 和 RTCP")]),a("ul",[a("li",[a("a",{attrs:{href:"#rtp-报文格式"}},[t._v("RTP 报文格式")])]),a("li",[a("a",{attrs:{href:"#rtcp-协议"}},[t._v("RTCP 协议")])])])])])]),a("p"),t._v(" "),a("h2",{attrs:{id:"udp-还是-tcp"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#udp-还是-tcp","aria-hidden":"true"}},[t._v("#")]),t._v(" UDP 还是 TCP")]),t._v(" "),a("p",[t._v("TCP 是一种 "),a("strong",[t._v("面向连接、可靠的、基于字节流")]),t._v(" 的传输层通信协议，而 UDP 是一种 "),a("strong",[t._v("无连接")]),t._v(" 的传输层协议。")]),t._v(" "),a("p",[t._v("那么，如果做直播，要选择什么协议来进行数据传输呢？当然是 UDP 了，因为 TCP 为了保持连接，会去做很多保持连接、数据可靠的工作，而它会产生实时互动直播系统可能无法忍受的延迟。")]),t._v(" "),a("h2",{attrs:{id:"rtp-和-rtcp"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rtp-和-rtcp","aria-hidden":"true"}},[t._v("#")]),t._v(" RTP 和 RTCP")]),t._v(" "),a("p",[t._v("RTP 全称为 "),a("strong",[t._v("Real-time Transport Protocol")]),t._v("，实时传输协议，它运行在 UDP 之上。")]),t._v(" "),a("p",[t._v("我们在进行音视频数据传输的时候，先给数据加一个 RTP 头，然后再交给 UDP 进行数据传输。")]),t._v(" "),a("h3",{attrs:{id:"rtp-报文格式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rtp-报文格式","aria-hidden":"true"}},[t._v("#")]),t._v(" RTP 报文格式")]),t._v(" "),a("p",[t._v("RTP 报文由两部分组成：报头和有效载荷。")]),t._v(" "),a("p",[t._v("其中报头的部分为如下格式：")]),t._v(" "),a("ol",[a("li",[t._v("版本(V): 2 比特，定义了 RTP 的版本。")]),t._v(" "),a("li",[t._v("填充(P): 1 比特，如果 P 设置为 1，则在该报文的末尾填充一个或多个额外的八位组，不计算在有效载荷之内。")]),t._v(" "),a("li",[t._v("扩展(X): 1 比特，如果 X 被设置为 1，则在 RTP 报头后跟有一个扩展报头。")]),t._v(" "),a("li",[t._v("CSRC 计数(CC): 4 比特，指示 CSRC 标识符的个数。")]),t._v(" "),a("li",[t._v("标记(M): 1 比特，一般用于界定视频帧边界，但具体含义是 profile 定义。")]),t._v(" "),a("li",[t._v("负载类型(P): 7 比特，定义了负载的格式。")]),t._v(" "),a("li",[t._v("序列号(sequence number): 16 比特，用来记录包的顺序，组包拆包。")]),t._v(" "),a("li",[t._v("时间戳(timestamp): 32 比特，同一帧的不同分片的时间戳是一样的，不同帧时间戳不同。")])]),t._v(" "),a("h3",{attrs:{id:"rtcp-协议"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rtcp-协议","aria-hidden":"true"}},[t._v("#")]),t._v(" RTCP 协议")]),t._v(" "),a("p",[t._v("在使用 RTP 进行数据传输时，难免会丢包、乱序，所以 WebRTC 在底层处理之前会利用 RTCP 协议进行网络质量的探测。")]),t._v(" "),a("p",[t._v("RTCP 两个重要的报文 RR 和 SR，关于报文字段的详细解释，这里有一篇博客，可以了解一下：https://blog.csdn.net/explorer_day/article/details/78641723")]),t._v(" "),a("p",[t._v("SR 的报文分三部分 Header、Sender info、Report block。")]),t._v(" "),a("ul",[a("li",[t._v("Header 部分用于表示报文的类型，是 SR 还是 RR")]),t._v(" "),a("li",[t._v("Sender info 用于说明发送方发了多少包")]),t._v(" "),a("li",[t._v("Report block 表示接收方从各个 SSRC 接收到包的情况")])]),t._v(" "),a("p",[t._v("RTCP 中还有很多的报文，每一个都要了解掌握，才能够更好的学习 WebRTC。")])])},[],!1,null,null,null);r.default=v.exports}}]);