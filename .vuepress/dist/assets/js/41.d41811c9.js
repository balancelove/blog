(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{390:function(t,r,a){"use strict";a.r(r);var e=a(38),i=Object(e.a)({},function(){var t=this,r=t.$createElement,a=t._self._c||r;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"渲染机制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#渲染机制","aria-hidden":"true"}},[t._v("#")]),t._v(" 渲染机制")]),t._v(" "),a("h2",{attrs:{id:"什么是-doctype-及作用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是-doctype-及作用","aria-hidden":"true"}},[t._v("#")]),t._v(" 什么是 DOCTYPE 及作用")]),t._v(" "),a("p",[t._v("告诉浏览器以何种规则去解析这个文档，判断文档类型。")]),t._v(" "),a("h2",{attrs:{id:"渲染过程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#渲染过程","aria-hidden":"true"}},[t._v("#")]),t._v(" 渲染过程")]),t._v(" "),a("p",[t._v("解析 HTML 结构 -> 解析 CSS 生成 cssom 树 -> 结合成 render 树进行渲染")]),t._v(" "),a("p",[a("img",{attrs:{src:"/interview/browser/paint/paint.png",alt:""}})]),t._v(" "),a("p",[t._v("Layout: render Tree 不包含 html 具体内容，不知道元素具体该画在哪个位置，布局计算了每一个对象的准确的位置以及大小")]),t._v(" "),a("h2",{attrs:{id:"重排-reflow-——-位置改变、大小改变等"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#重排-reflow-——-位置改变、大小改变等","aria-hidden":"true"}},[t._v("#")]),t._v(" 重排 reflow —— 位置改变、大小改变等")]),t._v(" "),a("p",[t._v("DOM 结构都有自己的盒模型，这些都需要浏览器根据各种样式计算出它的位置")]),t._v(" "),a("ul",[a("li",[t._v("增删改 DOM 节点，会导致 reflow 或 repaint")]),t._v(" "),a("li",[t._v("当你移动 DOM 位置，或动画")]),t._v(" "),a("li",[t._v("修改 CSS 样式(改变宽高、是否显示等等)")]),t._v(" "),a("li",[t._v("resize 窗口，或滚动的时候")]),t._v(" "),a("li",[t._v("修改网页默认字体")])]),t._v(" "),a("h2",{attrs:{id:"重绘-repaint"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#重绘-repaint","aria-hidden":"true"}},[t._v("#")]),t._v(" 重绘 repaint")]),t._v(" "),a("p",[t._v("当浏览器的各种盒子的位置、大小、颜色等等确定后，浏览器就开始绘制")]),t._v(" "),a("ul",[a("li",[t._v("DOM 改动")]),t._v(" "),a("li",[t._v("CSS 改动")])])])},[],!1,null,null,null);r.default=i.exports}}]);