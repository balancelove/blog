(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{370:function(a,t,s){"use strict";s.r(t);var n=s(38),e=Object(n.a)({},function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"前端工程化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#前端工程化","aria-hidden":"true"}},[a._v("#")]),a._v(" 前端工程化")]),a._v(" "),s("blockquote",[s("p",[a._v("前端工程化是什么？为什么我们需要工程化，以前直接开撸页面的方法不行了么？看了第一章，有这么几点想法，以前的方法不是不行了，只是原来的方法无法适应现在快节奏的开发迭代工作，同时，我们要适应新标准等等，我们需要工程化来帮助我们完成一些基础工作。总的来说，我们工程化要解决的问题是开发、测试、部署的工作，我们能够通过脚手架、本地服务器、构建系统以及部署、持续集成等工程化解决方案来加快我们的工作。")])]),a._v(" "),s("h2",{attrs:{id:"脚手架"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#脚手架","aria-hidden":"true"}},[a._v("#")]),a._v(" 脚手架")]),a._v(" "),s("p",[a._v("脚手架最开始是建筑领域的词汇，引申到软件开发领域，它是作为一种创建项目初始文件的工具，它能够帮助我们快速生成初始代码结构、功能模块的基本配置、自动安装依赖等等。")]),a._v(" "),s("p",[a._v("脚手架的本质就是要完成以下功能：")]),a._v(" "),s("ol",[s("li",[a._v("快速生成配置")]),a._v(" "),s("li",[a._v("降低框架学习成本")]),a._v(" "),s("li",[a._v("令业务开发人员关注业务逻辑本身")])]),a._v(" "),s("p",[a._v("（Yeoman）整个脚手架的流程就是先收集用户配置、转化动态内容，然后自动安装依赖模块。")]),a._v(" "),s("p",[a._v("脚手架就是帮助开发人员只专注于业务开发，同时，也能够统一公司规范和开发模式。")]),a._v(" "),s("h2",{attrs:{id:"构建系统"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#构建系统","aria-hidden":"true"}},[a._v("#")]),a._v(" 构建系统")]),a._v(" "),s("p",[a._v("构建系统也是整个工程化中最复杂的一项，但幸运的是我们现在拥有一些不错的工具来帮助我们完成这项工作。")]),a._v(" "),s("p",[a._v("构建主要分几个主要方面：")]),a._v(" "),s("ol",[s("li",[a._v("语言方面，也就是 ECMAScript 标准、CSS 预编译、HTML 模板渲染等")]),a._v(" "),s("li",[a._v("优化方面，依赖打包、资源嵌入、文件压缩、hash 指纹等等")]),a._v(" "),s("li",[a._v("部署方面，域名/路径改变、文件名改变等")])]),a._v(" "),s("h3",{attrs:{id:"javascript-构建"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#javascript-构建","aria-hidden":"true"}},[a._v("#")]),a._v(" JavaScript 构建")]),a._v(" "),s("p",[a._v("那么我们要如何对 JavaScript 进行构建呢？")]),a._v(" "),s("p",[a._v("这时就要使用到一些工具了，比如 Webpack、Babel 来实现。")]),a._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// babel-loader 配置")]),a._v("\nmodule"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n  rules"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n      test"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token regex"}},[a._v("/\\.js$/")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n      exclude"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token regex"}},[a._v("/(node_modules|bower_components)/")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n      use"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        loader"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'babel-loader'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n        options"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'babel-plugin-transform-object-rest-spread'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br"),s("span",{staticClass:"line-number"},[a._v("10")]),s("br"),s("span",{staticClass:"line-number"},[a._v("11")]),s("br"),s("span",{staticClass:"line-number"},[a._v("12")]),s("br"),s("span",{staticClass:"line-number"},[a._v("13")]),s("br")])]),s("h3",{attrs:{id:"css-预编译和-postcss"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#css-预编译和-postcss","aria-hidden":"true"}},[a._v("#")]),a._v(" CSS 预编译和 PostCSS")]),a._v(" "),s("p",[a._v("css 看起来有什么缺陷呢？那就是它的弱编程能力，以及浏览器对规范的实现方案各一。")]),a._v(" "),s("p",[a._v("现阶段一般的解决方案是使用 CSS 预编译加上 PostCSS 进行处理。")]),a._v(" "),s("h3",{attrs:{id:"模块化与组件化"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#模块化与组件化","aria-hidden":"true"}},[a._v("#")]),a._v(" 模块化与组件化")]),a._v(" "),s("ul",[s("li",[a._v("模块化和组件化的区别主要体现在颗粒度层面。")])]),a._v(" "),s("p",[a._v("模块化有什么价值呢？")]),a._v(" "),s("ol",[s("li",[a._v("解决命名冲突问题")]),a._v(" "),s("li",[a._v("可以使代码复用")]),a._v(" "),s("li",[a._v("便于依赖管理")]),a._v(" "),s("li",[a._v("提高可维护性")]),a._v(" "),s("li",[a._v("利与性能优化（比如按需加载 import() 函数）")])]),a._v(" "),s("p",[a._v("知识点：")]),a._v(" "),s("ul",[s("li",[a._v("CommonJS（适用于 JavaScript 模块化，不适合浏览器，因为浏览器有 CSS、图片等资源，同步加载）、AMD、CMD、ES6 Module（import () 函数满足按需加载需求）")]),a._v(" "),s("li",[a._v("webpack 提供了 require.ensure，但是 import() 非常有可能称为正式的规范")])]),a._v(" "),s("h3",{attrs:{id:"增量更新和缓存"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#增量更新和缓存","aria-hidden":"true"}},[a._v("#")]),a._v(" 增量更新和缓存")]),a._v(" "),s("p",[a._v("缓存主要分两种，一种是本地存储，一种是 HTTP 缓存策略。")]),a._v(" "),s("p",[a._v("HTTP 缓存主要分协商缓存和强制缓存两种策略。")]),a._v(" "),s("ol",[s("li",[a._v("强制缓存：Expire 和 max-age，Expire 是指定一个明确的过期时间点，缺点是这个过期时间点是服务器的时间。为了解决这个问题，HTTP 1.1 新增了 Cache-control 首部信息，它有以下几种常见信息：no-cache 和 no-store、private 和 public、max-age。主要使用的 max-age 来指定过期时间，它是指定从请求发起的时间开始计算，此响应的缓存副本有效时间。")]),a._v(" "),s("li",[a._v("协商缓存：Etag 和 If-none-match，Etag 是服务器为资源分配的字符串形式唯一标识，作为响应头部返回给客户端。浏览器在 Cache-control 指定 no-cache、max-age、Expire 都过期了，就会将这个字符串作为 If-none-match 的值发送给服务端，如果没有变化就返回 304，更新 Cache-control，有变化就分配新的 Etag。")])]),a._v(" "),s("h3",{attrs:{id:"覆盖更新和增量更新"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#覆盖更新和增量更新","aria-hidden":"true"}},[a._v("#")]),a._v(" 覆盖更新和增量更新")]),a._v(" "),s("p",[a._v("使用 hash 指纹的方式可以实现增量更新。")]),a._v(" "),s("p",[a._v("webpack 可以帮助我们实现增量更新：")]),a._v(" "),s("p",[a._v("hash 与 chunkhash，hash 是整个项目，只要有一个文件有变动就会更新所有编译后的文件，明显不符合增量更新，而 chunkhash 是符合的。")]),a._v(" "),s("p",[a._v("css 文件使用 contenthash 来进行增量更新。")]),a._v(" "),s("p",[a._v("PS：剩下的本地开发服务器 webpack 有相应的解决方案，部署倾向于使用 docker 的容器化技术，方便快捷，工作流是常用的 git flow 工作流。")])])},[],!1,null,null,null);t.default=e.exports}}]);